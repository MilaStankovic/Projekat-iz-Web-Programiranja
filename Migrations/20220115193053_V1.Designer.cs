// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Palacinkarnica.Migrations
{
    [DbContext(typeof(PalacinkarnicaContext))]
    [Migration("20220115193053_V1")]
    partial class V1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Lokal", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Adresa");

                    b.Property<int>("BrojZaposlenih")
                        .HasColumnType("int")
                        .HasColumnName("BrojZaposlenih");

                    b.Property<string>("Grad")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Grad");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Naziv");

                    b.HasKey("ID");

                    b.ToTable("Lokali");
                });

            modelBuilder.Entity("Narudzbina", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrojStola")
                        .HasColumnType("int")
                        .HasColumnName("BrojStola");

                    b.Property<int?>("LokalZaNarudzbinuID")
                        .HasColumnType("int");

                    b.Property<string>("Napomena")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Napomena");

                    b.Property<int?>("SpremalacID")
                        .HasColumnType("int");

                    b.Property<int>("VrstaPalacinke")
                        .HasColumnType("int")
                        .HasColumnName("VrstaPalacinke");

                    b.HasKey("ID");

                    b.HasIndex("LokalZaNarudzbinuID");

                    b.HasIndex("SpremalacID");

                    b.ToTable("Narudzbine");
                });

            modelBuilder.Entity("Radnik", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrojSlobodnihDana")
                        .HasColumnType("int")
                        .HasColumnName("BrojSlobodnihDana");

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime2")
                        .HasColumnName("DatumRodjenja");

                    b.Property<DateTime>("DatumZaposljenja")
                        .HasColumnType("datetime2")
                        .HasColumnName("DatumZaposljenja");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Ime");

                    b.Property<int?>("LokalID")
                        .HasColumnType("int");

                    b.Property<string>("Mejl")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Mejl");

                    b.Property<int>("Plata")
                        .HasColumnType("int")
                        .HasColumnName("Plata");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Prezime");

                    b.HasKey("ID");

                    b.HasIndex("LokalID");

                    b.ToTable("Radnici");
                });

            modelBuilder.Entity("Narudzbina", b =>
                {
                    b.HasOne("Lokal", "LokalZaNarudzbinu")
                        .WithMany()
                        .HasForeignKey("LokalZaNarudzbinuID");

                    b.HasOne("Radnik", "Spremalac")
                        .WithMany("Narudzbine")
                        .HasForeignKey("SpremalacID");

                    b.Navigation("LokalZaNarudzbinu");

                    b.Navigation("Spremalac");
                });

            modelBuilder.Entity("Radnik", b =>
                {
                    b.HasOne("Lokal", "Lokal")
                        .WithMany("Radnici")
                        .HasForeignKey("LokalID");

                    b.Navigation("Lokal");
                });

            modelBuilder.Entity("Lokal", b =>
                {
                    b.Navigation("Radnici");
                });

            modelBuilder.Entity("Radnik", b =>
                {
                    b.Navigation("Narudzbine");
                });
#pragma warning restore 612, 618
        }
    }
}
